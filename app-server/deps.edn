{:paths ["src" "resources" "target/resources"]
 :deps {org.clojure/clojure {:mvn/version "1.11.0-alpha4"}
        babashka/babashka.curl {:mvn/version "0.1.1"}
        metosin/malli {:mvn/version "0.7.5"}
        clojure.java-time/clojure.java-time {:mvn/version "0.3.3"}
        org.clojure/tools.cli {:mvn/version "1.0.206"}
        cheshire/cheshire {:mvn/version "5.10.1"}
        camel-snake-kebab/camel-snake-kebab {:mvn/version "0.4.2"}
        org.clojure/data.csv {:mvn/version "1.0.0"}
        com.taoensso/timbre {:mvn/version "5.1.2"}
        com.walmartlabs/lacinia-pedestal {:mvn/version "1.1"}
        com.walmartlabs/lacinia {:mvn/version "1.1"}
        io.aviso/logging {:mvn/version "1.0"}
        org.clojure/tools.reader {:mvn/version "1.3.6"}}

 :aliases {;;;; project utility ;;;;
           ;; clj -M:project/outdated ... check outdated library
           :project/outdated {:extra-deps {com.github.liquidz/antq {:mvn/version "1.3.0"}
                                           org.slf4j/slf4j-nop     {:mvn/version "RELEASE"}}
                              :main-opts ["-m" "antq.core"]}
           ;; clj -M:project/check ... program static checker
           :project/check {:extra-deps {athos/clj-check
                                        {:git/url "https://github.com/athos/clj-check.git"
                                         :sha     "518d5a1cbfcd7c952f548e6dbfcb9a4a5faf9062"}}
                           :main-opts  ["-m" "clj-check.check"]}
           ;; clj -T:project/build [clean/all] ... build program (no needed)
           :project/build {:deps {io.github.clojure/tools.build {:git/tag "v0.7.1" :git/sha "13f0fec"}}
                           :ns-default build}

           ;; build by graalvm
           ;;   you should instasll graalvm and run "gu install native-image"
           ;; clj -M:project/native-image
           :project/native-image {:extra-deps
                                  {luchiniatwork/cambada {:mvn/version "1.0.5"}}
                                  :main-opts ["-m" "cambada.native-image"
                                              "-m" "app_server.main"]}

           ;;;; format utility ;;;;
           ;; clj -M:format fix ... re-format files
           :format/format {:extra-deps {mvxcvi/cljstyle {:mvn/version "0.15.0"}}
                           :main-opts ["-m" "cljstyle.main"]}
           ;; clj -M:format/idiom -- --replace ... replace code to recommended format
           :format/idiom {:replace-paths []
                          :replace-deps  {tvaughan/kibit-runner {:mvn/version "1.0.1"}}
                          :main-opts     ["-m" "kibit-runner.cmdline"]}

           ;;;; test utility ;;;;
           ;; clj -M:test/clj-kondo ... static code checker
           :test/clj-kondo {:extra-deps {clj-kondo/clj-kondo {:mvn/version "2022.01.15"}}
                            :main-opts  ["-m" "clj-kondo.main" "--lint" "src"]}
           ;; clj -M:test/test ... run test
           ;; clj -M:test/test --plugin cloverage ... run test with coverage report
           :test/test {:extra-paths ["test"]
                       :extra-deps  {lambdaisland/kaocha           {:mvn/version "1.60.945"}
                                     lambdaisland/kaocha-cloverage {:mvn/version "1.0.75"}
                                     orchestra/orchestra {:mvn/version "2021.01.01-1"}}
                       :main-opts   ["-m" "kaocha.runner"]}

           ;;;; development utility ;;;;
           ;; clj -X:dev/emit-kondo ... emit clj-kondo's static lint settings
           :dev/emit-kondo {:extra-paths ["dev/resources" "dev/src" "test"]
                            :extra-deps {org.clojure/tools.namespace {:mvn/version "1.2.0"}
                                         ns-tracker/ns-tracker {:mvn/version "0.4.0"}
                                         eftest/eftest     {:mvn/version "0.5.9"}}
                            :exec-fn dev/emit-malli!
                            :exec-args {:all-ns true}}
           ;; clj -M:dev ... entering dev environment
           :dev {:extra-paths ["dev/resources" "dev/src" "test"]
                 :extra-deps {ns-tracker/ns-tracker {:mvn/version "0.4.0"}
                              eftest/eftest     {:mvn/version "0.5.9"}
                              orchestra/orchestra {:mvn/version "2021.01.01-1"}
                              ;; integrant/repl {:mvn/version "0.3.2"} ... for server app
                              }}}}
